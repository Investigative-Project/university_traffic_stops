"""
IDOT data has a couple dupes we gotta take care of

-- offenders
sqlite> select name, count(*) from agencies group by name having count(*) > 1;
CRETE POLICE|2
NORMAL POLICE|2

-- what do they have
sqlite> select name, code from agencies name where name in ('CRETE POLICE','NORMAL POLICE');
NORMAL POLICE|13568
CRETE POLICE|13951
CRETE POLICE|14000
NORMAL POLICE|13568.00

-- which are more recent
sqlite> select AgencyName, AgencyCode, max(year) from stops where AgencyCode in ('13568','13951','14000','13568.00') group by AgencyName, AgencyCode order by AgencyName, year;
CRETE POLICE|13951|2004
CRETE POLICE|14000|2022
NORMAL POLICE|13568.00|2017
NORMAL POLICE|13568|2022


"""

# Generated by Django 4.1 on 2023-12-15 23:05


from django.db import migrations
from stops.models import Agency


def fix(apps,schema_editor):
    """
    assign stops pointing to old agency IDs/codes to new ones
    then delete the old agencies
    """
    old_crete=Agency.objects.get(code='13951')
    new_crete=Agency.objects.get(code='14000')
    old_normal=Agency.objects.get(code='13568.00')
    new_normal=Agency.objects.get(code='13568')

    for stop in old_crete.stop_set.all():
        stop.agency_id = new_crete.id
        stop.save()

    for stop in old_normal.stop_set.all():
        stop.agency_id = new_normal.id
        stop.save()

    old_crete.delete()
    old_normal.delete()



class Migration(migrations.Migration):

    dependencies = [
        ('stops', '0021_agency_public_drive_id'),
    ]

    operations = [
            migrations.RunPython(fix)
    ]
