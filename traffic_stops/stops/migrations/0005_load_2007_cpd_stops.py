# Generated by Django 4.1 on 2023-02-11 16:59
from django.db import migrations
from stops.models import Stop
import os, csv, datetime, dateparser, ipdb
from traffic_stops.settings import BASE_DIR, LOADER_DEBUG
from stops.utils.loaders import convert_date, convert_time, \
        convert_int, get_year, convert_time_ampm
from django.db import connection


### START CONFIG ###
data_dir = str(BASE_DIR) + '/data/'
data_filenames = ['Chicago Raw Data2007 File1.txt',
        'Chicago Raw Data2007 File2.txt',
        'Chicago Raw Data2007 File3.txt'
        ]
year = '2007'
### END CONFIG ###


def load_files(apps,schema_editor):
    # load each file one at a time
    for filename in data_filenames:
        print('loading',filename)
        file_path = data_dir + filename 
        data_file = open(file_path,encoding='latin-1') # TODO verify this encoding
        data_csv = csv.DictReader(data_file,delimiter='~')
        try:
            load_data(data_csv,year,filename)
        except Exception as e:
            print(e)
            import ipdb; ipdb.set_trace()


def load_data(data_csv,year,filename):
    # keep track of each stop
    stop_objs = []
    # pick up where we left off
    counter = connection.cursor().execute("select max(id) from stops_stop where year = 2007").fetchone()[0]

    for row in data_csv:
        counter += 1
        pk = counter
        
        # cleanup
        for key in row:
            if row[key] in ('#REF!',''):
                row[key] = None
            # convert ints to int or none
            if key in ['Vehicle Year']:
                row[key] = convert_int(row[key],counter)
        try:  
            # seriously it's three different formats for one year ðŸ™„ 
            if 'File1' in filename:
                # date/time parsing
                row_date = row['Date and Time of Stop'].split()[0]
                row_date_formatted = convert_date(row_date)
                row_time = ' '.join(row['Date and Time of Stop'].split()[1:])
                #row_time_formatted = convert_time_ampm(row_time,counter)

                stop_obj = Stop(
                            pk = pk,
                            AgencyName = row['AgencyName'],
                            AgencyCode = row['AgencyCode'],
                            year = year,
                            DateOfStop = row_date_formatted,
                            TimeOfStop = row_time,
                            VehicleMake = row['Vehicle Make'],
                            VehicleYear = row['Vehicle Year'],
                            DriversYearofBirth = row['Driver Year of Birth'],
                            DriverSex = row['DriverSex'],
                            DriverRace = row['Race'],
                            ReasonForStop = row['ReasonforStop'],
                            TypeOfMovingViolation = row['MovingViolationType'],
                            ResultOfStop = row['ResultOfStop'],
                            BeatLocationOfStop = row['Beat Location Stop'],
                            SearchConducted = row['SearchConducted'],
                            VehicleSearchType = row['VehicleSearchType'],
                            DriverSearchType = row['DriverSearchType'],
                            Passenger1SearchType = row['Pass 1 Search Type'],
                            Passenger2SearchType = row['Pass 2 Search Type'],
                            Passenger3SearchType = row['Pass 3 Search Type'],
                            Passenger4SearchType = row['Pass 4 Search Type'],
                            Passenger5SearchType = row['Pass 5 Search Type'],
                            Passenger6SearchType = row['Pass 6 Search Type'],
                )
            elif 'File2' in filename:
                # date/time parsing
                row_date = row['Date and Time of Stop'].split()[0]
                row_date_formatted = convert_date(row_date)
                row_time = ' '.join(row['Date and Time of Stop'].split()[1:])
                #row_time_formatted = convert_time_ampm(row_time,counter)

                stop_obj = Stop(
                            pk = pk,
                            AgencyName = row['AgencyName'],
                            AgencyCode = row['AgencyCode'],
                            year = year,
                            DateOfStop = row_date_formatted,
                            TimeOfStop = row_time,
                            VehicleMake = row['Vehicle Make'],
                            VehicleYear = row['Vehicle Year'],
                            DriversYearofBirth = row['Driver Year of Birth'],
                            DriverSex = row['DriverSex'],
                            DriverRace = row['Race'],
                            ReasonForStop = row['ReasonforStop'],
                            TypeOfMovingViolation = row['MovingViolationType'],
                            ResultOfStop = row['ResultOfStop'],
                            BeatLocationOfStop = row['Beat Location Stop'],
                            SearchConducted = row['SearchConducted'],
                            VehicleSearchType = row['VehicleSearchType'],
                            DriverSearchType = row['DriverSearchType'],
                            PassengersSearchType = row['PassengerSearchType'],
                            
							ContrabandFound = row['ContrabandFound'],
							DrugsFound = row['DrugsFound'],
							ParaphernaliaFound = row['ParaphernaliaFound'],
							AlcoholFound = row['AlcoholFound'],
							WeaponFound = row['WeaponFound'],
							StolenPropertyFound = row['StolenPropertyFound'],
							OtherContrabandFound = row ['OtherContrabandFound'],
							DrugQuantity = row['DrugQuantity'],
							ConsentSearchRequested = row['ConsentSearchRequested'],
							WasConsentGranted = row['WasConsentGranted'],
							WasConsentSearchPerformed = row['WasConsentSearchPerformed'],
							WasConsentContrabandFound = row['WasConsentContrabandFound'],
							ConsentDrugsFound = row['ConsentDrugsFound'],
							ConsentParaphernaliaFound = row['ConsentParaphernaliaFound'],
							ConsentAlcoholFound = row['ConsentAlcoholFound'],
							ConsentWeaponFound = row['ConsentWeaponFound'],
							ConsentStolenPropertyFound = row['ConsentStolenPropertyFound'],
							ConsentOtherContrabandFound = row['ConsentOtherContrabandFound'],
							ConsentDrugQuantity = row['ConsentDrugQuantity'],
                )
            elif 'File3' in filename:
                # date/time parsing
                row_date = row['DateStop TimeStop'].split()[0]
                row_date_formatted = convert_date(row_date)
                row_time = ' '.join(row['DateStop TimeStop'].split()[1:])

                stop_obj = Stop(
                            pk = pk,
                            AgencyName = row['AgencyName'],
                            AgencyCode = row['AgencyCode'],
                            year = year,
                            DateOfStop = row_date_formatted,
                            TimeOfStop = row_time,
                            VehicleMake = row['VehMake'],
                            VehicleYear = row['VehYr'],
                            DriversYearofBirth = row['YrBirth'],
                            DriverSex = row['DriverSex'],
                            DriverRace = row['Race'],
                            ReasonForStop = row['ReasonforStop'],
                            TypeOfMovingViolation = row['MovingViolationType'],
                            ResultOfStop = row['ResultOfStop'],
                            BeatLocationOfStop = row['Beat'],
                            SearchConducted = row['SearchConducted'],
                            VehicleSearchType = row['VehicleSearchType'],
                            DriverSearchType = row['DriverSearchType'],
                            PassengersSearchType = row['PassengerSearchType'],
							ContrabandFound = row['ContrabandFound'],
							DrugsFound = row['DrugsFound'],
							ParaphernaliaFound = row['ParaphernaliaFound'],
							AlcoholFound = row['AlcoholFound'],
							WeaponFound = row['WeaponFound'],
							StolenPropertyFound = row['StolenPropertyFound'],
							OtherContrabandFound = row ['OtherContrabandFound'],
							DrugQuantity = row['DrugQuantity'],
							ConsentSearchRequested = row['ConsentSearchRequested'],
							WasConsentGranted = row['WasConsentGranted'],
							WasConsentSearchPerformed = row['WasConsentSearchPerformed'],
							WasConsentContrabandFound = row['WasConsentContrabandFound'],
							ConsentDrugsFound = row['ConsentDrugsFound'],
							ConsentParaphernaliaFound = row['ConsentParaphernaliaFound'],
							ConsentAlcoholFound = row['ConsentAlcoholFound'],
							ConsentWeaponFound = row['ConsentWeaponFound'],
							ConsentStolenPropertyFound = row['ConsentStolenPropertyFound'],
							ConsentOtherContrabandFound = row['ConsentOtherContrabandFound'],
							ConsentDrugQuantity = row['ConsentDrugQuantity'],

                )
            stop_objs.append(stop_obj)

        except Exception as e:
            print('pk:',pk)
            print('error:',e)
            #ipdb.set_trace()

        if LOADER_DEBUG:
            if counter > 10:
                break


    Stop.objects.bulk_create(stop_objs)

class Migration(migrations.Migration):

    dependencies = [
        ('stops', '0004_load_2004_2006_stops'),
    ]

    operations = [
        migrations.RunPython(load_files)
    ]
